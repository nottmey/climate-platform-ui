name: "Test"

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - main

jobs:
  test-flutter:
    name: "Flutter"
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout"
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: "Setup Empty .env.local"
        run: cp .env .env.local
      - name: "Determine Flutter Version"
        id: flutter-version
        run: echo "FLUTTER_VERSION=$(jq -r ".flutterSdkVersion" .fvm/fvm_config.json)" >> $GITHUB_OUTPUT
      - name: "Install Flutter"
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
          cache: true
      - name: "Run Tests"
        run: flutter test --coverage
      - name: "Upload Coverage Report to Codecov"
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true
  test-fastlane-ios:
    name: "Fastlane for iOS"
    runs-on: macos-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/ios/Gemfile
    steps:
      - name: "Checkout"
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: "Setup Ruby"
        uses: ruby/setup-ruby@250fcd6a742febb1123a77a841497ccaa8b9e939 # v1.152.0
        with:
          # using .ruby-version
          # installing gems automatically
          bundler-cache: true # requires BUNDLE_GEMFILE
      - name: "Setup Xcode"
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: latest-stable
      - name: "Setup API Key"
        env:
          # 1. `base64 -i AuthKey_<...>.p8 -o AuthKey_<...>.base64`
          # 2. `pbcopy < AuthKey_<...>.base64` and paste without a newline
          APP_STORE_CONNECT_API_KEY_FILE: ${{ secrets.APP_STORE_CONNECT_API_KEY_FILE }}
        run: |
          mkdir ~/.private_keys
          echo $APP_STORE_CONNECT_API_KEY_FILE | base64 --decode > ~/.private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}.p8
      - name: "Check whether App Store access works"
        working-directory: ios
        env:
          APP_STORE_CONNECT_APPLE_ID: ${{ secrets.APP_STORE_CONNECT_APPLE_ID }}
          APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        run: bundle exec fastlane set_next_version_in_pubspec
