name: "Deploy Web"

on:
  workflow_dispatch:
    inputs:
      next_version:
        description: "Version to be used in pubspec.yaml"
        type: string
        required: true
  workflow_call:
    inputs:
      next_version:
        description: "Version to be used in pubspec.yaml"
        type: string
        required: true
    secrets:
      APP_SYNC_API_KEY:
        required: true

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: "Setup empty .env.local"
        run: sed 's/APP_SYNC_API_KEY.*/APP_SYNC_API_KEY="${{ secrets.APP_SYNC_API_KEY }}"/' .env > .env.local
      # TODO make this shared action between build and test
      - name: "Determine Flutter Version"
        id: flutter-version
        run: echo "FLUTTER_VERSION=$(jq -r ".flutterSdkVersion" .fvm/fvm_config.json)" >> $GITHUB_OUTPUT
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
          cache: true
      - name: "Set build version"
        run: yq -i '.version = "${{ inputs.next_version }}"' pubspec.yaml
      - name: "Build web"
        run: flutter build web --source-maps --base-href /${{ github.event.repository.name }}/
      - name: "Upload Pages artifact"
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          path: build/web
  deploy:
    needs: build
    name: "Deploy"
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: "Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@9dbe3824824f8a1377b8e298bafde1a50ede43e5 # v2.0.4
