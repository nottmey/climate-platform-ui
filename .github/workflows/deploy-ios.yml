name: "Deploy iOS"

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      APP_SYNC_API_KEY:
        required: true
      APP_STORE_CONNECT_APPLE_ID:
        required: true
      APP_STORE_CONNECT_TEAM_ID:
        required: true
      APP_STORE_CONNECT_ISSUER_ID:
        required: true
      APP_STORE_CONNECT_API_KEY_ID:
        required: true
      APP_STORE_CONNECT_API_KEY_FILE:
        required: true
      APP_STORE_DISTRIBUTION_CERT_ID:
        required: true
      APP_STORE_DISTRIBUTION_CERT_KEY_FILE:
        required: true
      CODECOV_TOKEN:
        required: true
      SECRET_SETTING_TOKEN:
        required: true

jobs:
  build:
    name: "Build"
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_APPLE_ID: ${{ secrets.APP_STORE_CONNECT_APPLE_ID }}
      APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      BUNDLE_GEMFILE: ${{ github.workspace }}/ios/Gemfile
      GITHUB_REPOSITORY: ${{ github.repository }}
      SECRET_SETTING_TOKEN: ${{ secrets.SECRET_SETTING_TOKEN }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: "Setup Empty .env.local"
        run: sed 's/APP_SYNC_API_KEY.*/APP_SYNC_API_KEY="${{ secrets.APP_SYNC_API_KEY }}"/' .env > .env.local
      - name: "Determine Flutter Version"
        id: flutter-version
        run: echo "FLUTTER_VERSION=$(jq -r ".flutterSdkVersion" .fvm/fvm_config.json)" >> $GITHUB_OUTPUT
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
          cache: true
      - name: "Setup Ruby"
        uses: ruby/setup-ruby@250fcd6a742febb1123a77a841497ccaa8b9e939 # v1.152.0
        with:
          # using .ruby-version
          # installing gems automatically
          bundler-cache: true # requires BUNDLE_GEMFILE
      - name: "Setup Xcode"
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: latest-stable
      - name: "Setup API key"
        env:
          # 1. `base64 -i AuthKey_<...>.p8 -o AuthKey_<...>.base64`
          # 2. `pbcopy < AuthKey_<...>.base64` and paste without a newline
          APP_STORE_CONNECT_API_KEY_FILE: ${{ secrets.APP_STORE_CONNECT_API_KEY_FILE }}
        run: |
          mkdir ~/.private_keys
          echo $APP_STORE_CONNECT_API_KEY_FILE | base64 --decode > ~/.private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}.p8
      - name: "Setup next version in pubspec.yaml"
        working-directory: ios
        run: bundle exec fastlane set_next_version_in_pubspec
      - name: "Pre-Build via Flutter"
        run: flutter build ios --no-codesign --release
      - name: "Setup distribution certificate key"
        working-directory: ios
        env:
          # automatically generated by previous runs via fastlane
          APP_STORE_DISTRIBUTION_CERT_KEY_FILE: ${{ secrets.APP_STORE_DISTRIBUTION_CERT_KEY_FILE }}
        run: |
          echo $APP_STORE_DISTRIBUTION_CERT_KEY_FILE | base64 --decode > ${{ secrets.APP_STORE_DISTRIBUTION_CERT_ID }}.p12
      - name: "Build & Sign via Fastlane"
        working-directory: ios
        run: bundle exec fastlane build
      - name: "Upload ipa artifact"
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ios-ipa
          path: ios/Runner.ipa
      - name: "Upload dSYM artifact"
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ios-dsym
          path: ios/Runner.app.dSYM.zip
  deploy:
    needs: build
    name: "Deploy"
    runs-on: macos-latest
    environment:
      name: testflight
      url: https://testflight.apple.com/join/VNxf4EKg
    env:
      APP_STORE_CONNECT_APPLE_ID: ${{ secrets.APP_STORE_CONNECT_APPLE_ID }}
      APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      BUNDLE_GEMFILE: ${{ github.workspace }}/ios/Gemfile
    steps:
      - name: "Checkout"
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: "Setup Ruby"
        uses: ruby/setup-ruby@250fcd6a742febb1123a77a841497ccaa8b9e939 # v1.152.0
        with:
          # using .ruby-version
          # installing gems automatically
          bundler-cache: true # requires BUNDLE_GEMFILE
      - name: "Setup Xcode"
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: latest-stable
      - name: "Setup API key"
        env:
          # 1. `base64 -i AuthKey_<...>.p8 -o AuthKey_<...>.base64`
          # 2. `pbcopy < AuthKey_<...>.base64` and paste without a newline
          APP_STORE_CONNECT_API_KEY_FILE: ${{ secrets.APP_STORE_CONNECT_API_KEY_FILE }}
        run: |
          mkdir ~/.private_keys
          echo $APP_STORE_CONNECT_API_KEY_FILE | base64 --decode > ~/.private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}.p8
      - name: "Download ipa artifact"
        uses: actions/download-artifact@v3.0.2
        with:
          name: ios-ipa
          path: ios
      - name: "Deploy via Fastlane"
        working-directory: ios
        run: bundle exec fastlane deploy
