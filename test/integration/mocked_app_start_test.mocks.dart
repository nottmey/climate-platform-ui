// Mocks generated by Mockito 5.3.2 from annotations
// in climate_platform_ui/test/integration/mocked_app_start_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:artemis/client.dart' as _i3;
import 'package:artemis/schema/graphql_query.dart' as _i6;
import 'package:artemis/schema/graphql_response.dart' as _i2;
import 'package:gql_exec/gql_exec.dart' as _i7;
import 'package:json_annotation/json_annotation.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGraphQLResponse_0<T> extends _i1.SmartFake
    implements _i2.GraphQLResponse<T> {
  _FakeGraphQLResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ArtemisClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockArtemisClient extends _i1.Mock implements _i3.ArtemisClient {
  MockArtemisClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GraphQLResponse<T>> execute<T, U extends _i5.JsonSerializable>(
    _i6.GraphQLQuery<T, U>? query, {
    _i7.Context? context = const _i7.Context(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [query],
          {#context: context},
        ),
        returnValue:
            _i4.Future<_i2.GraphQLResponse<T>>.value(_FakeGraphQLResponse_0<T>(
          this,
          Invocation.method(
            #execute,
            [query],
            {#context: context},
          ),
        )),
      ) as _i4.Future<_i2.GraphQLResponse<T>>);
  @override
  _i4.Stream<_i2.GraphQLResponse<T>> stream<T, U extends _i5.JsonSerializable>(
    _i6.GraphQLQuery<T, U>? query, {
    _i7.Context? context = const _i7.Context(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #stream,
          [query],
          {#context: context},
        ),
        returnValue: _i4.Stream<_i2.GraphQLResponse<T>>.empty(),
      ) as _i4.Stream<_i2.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
